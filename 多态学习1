多态 polymorphism
  
1.同类型的对象,表现的不同形态
2.表现形式:父类类型 对象名称 = 子类对象
3.前提:继承关系 其父类引用指向子类对象 方法重写
4.好处:使用父类型作为参数,可以接收所有子类对象,体现多态的扩展性与便利
  
  ******************************************************************************************************************************************************************************************
     public static void main(String[] args) {
        Student s = new Student();
        s.setName("崔晓阳");
        s.setAge(18);
        register(s);

        Teacher t = new Teacher();
        t.setName("崔老师");
        t.setAge(35);
        register(t);

    }


    public static void register(Person p){
          p.work();
    } 
----------------------------------------------------------------------------------------------
  public class Person {
    private String name;
    private int age;

    public void work(){
        System.out.println("信息");
    }

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public Person() {
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
  ----------------------------------------------------------------------
    public class Student extends Person{

    @Override
  public void work(){
      System.out.println("学生的信息:"+getName()+", "+getAge());
  }
}
------------------------------------------------------------------------------
  public class Teacher extends Person{
    @Override
    public void work(){
        System.out.println("老师的信息:"+getName()+", "+getAge());
    }
}
